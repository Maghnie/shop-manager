name: Frontend CI

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ main ]

jobs:
  code-quality:
    name: Code Quality
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
        cache-dependency-path: ./frontend/package-lock.json

    - name: Install dependencies
      run: npm ci

    - name: Run linter
      run: npm run lint
      continue-on-error: true

    - name: Run type check
      run: npm run build
      continue-on-error: true

  # Comprehensive testing across Node versions
  test:
    name: Tests (Node ${{ matrix.node-version }})
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend

    strategy:
      matrix:
        node-version: [18, 20]

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: ./frontend/package-lock.json

    - name: Install dependencies
      run: npm ci

    - name: Run tests
      run: npm run test:run
      continue-on-error: true

    - name: Generate coverage report
      run: npm run test:coverage
      if: matrix.node-version == 20  # Only generate coverage once
      continue-on-error: true

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      if: matrix.node-version == 20  # Only upload coverage once
      with:
        file: ./frontend/coverage/coverage-final.json
        flags: unittests
        name: codecov-umbrella

  # Security and dependency checks
  security:
    name: Security Audit
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
        cache-dependency-path: ./frontend/package-lock.json

    - name: Install dependencies
      run: npm ci

    - name: Run security audit
      run: npm audit --audit-level=high

    - name: Check for outdated dependencies
      run: npm outdated || true  # Don't fail on outdated deps, just report

  # Build and artifact generation
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [code-quality, test]  # Only run if quality and tests pass
    defaults:
      run:
        working-directory: ./frontend

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js 20
      uses: actions/setup-node@v4
      with:
        node-version: 20
        cache: 'npm'
        cache-dependency-path: ./frontend/package-lock.json

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-files
        path: ./frontend/dist/
        retention-days: 30